/* Flashcard.module.css */

.container {
  /* --primary-bg-color: #f7f9fc;  */
  /* --primary-bg-color: #f3f0e6; */
  background: var(--bg-color); /* Use the new whitish-bay background */
  color: var(--text-color); /* Update text colors for better readability */
  --text-primary: #333; /* Light mode text color */
  --dark-bg-color: #363636; /* Dark mode background */
  --dark-text-color: #f1f1f1; /* Dark mode text color */
  --accent-color: #08aeea; /* Button background color */
  --hover-accent-color: #2af598; /* Button hover background color */
  --transition-speed: 0.3s;

  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  margin-left: auto;
  margin-right: auto;
  width: 100%;
  min-height: 80vh;
  /* background: var(--primary-bg-color); */
  border-radius: 20px;
  box-shadow: 0 8px 30px rgba(0, 0, 0, 0.12);
  /* overflow: hidden; */
  overflow: visible; 
  position: relative;
  padding: 10px; /* Reduced padding */
  max-width: 80vw; /* Adjusted max width for better space usage */
}

.container.dark {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
}


.dark {
  background-color: var(--dark-bg-color);
  color: var(--dark-text-color);
}

.container .codeBlock {
  background-color: #f0f0f0;
  color: #333;
}

.container.dark .codeBlock {
  background-color: #1e1e1e;
  color: var(--text-secondary);
}

.container.dark .flashcardAnswer {
  color: #f1f1f1;
}

.darkModeToggle {
  cursor: pointer;
  font-size: 3rem;
  color: var(--text-secondary);
  transition: color var(--transition-speed);
}

.darkModeToggle:hover {
  color: var(--accent-color);
}

.buttonContainer {
  display: flex;
  justify-content: space-around;
  margin-top: 20px;
}

/* Positioning the progress wrapper */
.progressWrapper {
  position: absolute;
  top: 0;
  left: 0;
  z-index: 5;
}


/* Style for the base circle (track) */
.MuiCircularProgress-determinate {
  color: #e0e0e0; /* Light gray for the track */
}

/* Style for the progress path */
.MuiCircularProgress-circle {
  stroke: var(--accent-color);   
}

/* Style for the progress text */
.progressText {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%); /* Center the text inside the progress */
  font-size: 1.1rem; /* Adjust the font size accordingly */
  color: var(--text-primary);  

  z-index: 1;
}

.container.dark .progressText {
  color: var(--dark-text-color); /* Dark mode text color */
}



.progressCircleBackground {
  position: absolute;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
  width: 75px; 
  height: 75px; 
  background: var(--progress-background-light);
  border-radius: 50%; /* Ensures it's circular */
  z-index: -1; /* Ensure it's behind the text */
  border: 3px solid var(--progress-border); /* Use a variable for the border color */
}

.container.dark .progressCircleBackground {
  background: var(--progress-background-dark); /* Dark mode background */
  border: 3px solid var(--progress-border-dark); /* Dark mode border color */
}

/* Ensure topRightButtons stay at the top-right */
.topRightButtons {
  position: absolute;
  top: 10px;
  right: 10px;
  display: flex;
  align-items: center;
  /* Other styles remain unchanged */
}



.hintButton {
  padding: 10px 20px;
  border-radius: 8px;
  background-color: transparent; /* Change to match your design */
  border: 2px solid var(--accent-color); /* Sleek border */
  color: var(--accent-color); /* Text color to match the border */
  font-weight: 600;
  cursor: pointer;
  margin-top: 10px; /* Spacing from the content */
  position: absolute;
  bottom: 10px;
  right: 10px;
  z-index: 5;
  transition: background-color var(--transition-speed),
    transform var(--transition-speed), box-shadow var(--transition-speed);
}


.hintButton:hover {
  transform: scale(1.05); 
}

.openEditorBtn {
  padding: 10px 20px;
  border-radius: 8px;
  background-color: transparent; /* Change to match your design */
  border: 2px solid var(--accent-color); /* Sleek border */
  color: var(--accent-color); /* Text color to match the border */
  font-weight: 600;
  cursor: pointer;
  transition: background-color var(--transition-speed),
    transform var(--transition-speed);
  margin-top: 10px; /* Spacing from the content */

  position: absolute;
  bottom: 10px;
  left: 10px;
  z-index: 5;
}

.openEditorBtn:hover {
  background: linear-gradient(135deg, #0aafe6, #000000);
  transform: scale(1.05);
  box-shadow: 0 4px 8px rgba(0, 0, 0, 0.3); 
}

.buttonContainer .navButton {
  transition: background-color 0.3s ease, transform 0.2s ease;
  /* Use softer colors for transitions */
}

/* Example for a more muted hover effect */
.navButton:hover {
  background-color: transparent; /* Choose a softer color */
  transform: translateY(-2px); 
}


.navButton {
  padding: 10px 20px;
  border-radius: 50%;
  background-color: transparent;
  color: var(--accent-color);
  cursor: pointer;
  transition: background-color var(--transition-speed),
    transform var(--transition-speed);
  border: 2px solid var(--accent-color);
  position: absolute;
  font-size: 1.5rem;
  margin: 0 10px;
}


.navButton.previous {
  left: calc(40% - 50px);
  bottom: 0.5rem;
}

.navButton.next {
  right: calc(40% - 50px); 
  bottom: 0.5rem;
}



.exitBtn {
  color: var(--accent-color);
  top: 0;
  right: 0;
  height: 25px;
  width: 25px;
}
/* Flashcard container with 3D perspective for flip effect */
.flashcardContent {
  display: flex;
  justify-content: center;
  align-items: center;
  position: relative;
  width: 100%;
  max-width: 1000px;
  min-height: 400px; 
  padding: 20px;
  box-shadow: 0 10px 20px rgba(0, 0, 0, 0.19), 0 6px 6px rgba(0, 0, 0, 0.23);
  border-radius: 10px;
  background: var(--light-bg-color);
  perspective: 1000px;
  overflow: hidden; 
}

.flashcardQuestion,
.flashcardAnswer {
  color: var(--text-primary);
  font-size: 1.5rem; 
  text-align: center;
  margin: 20px 0;
  line-height: 1.5;
  font-weight: 600; 
}


/* Container for the flipping effect */
.flipContainer {
  position: relative;
  width: 75%; 
  height: 100%;
  transform-style: preserve-3d;
  transition: transform 0.8s ease-in-out;
}


/* Class added when the card is flipped */
.flipContainerFlipped {
  transform: rotateY(180deg);
}

.flipContainerFlipped .flashcardBack {
  z-index: 101; 
}


/* Common styles for the front and back of the card */
.flashcardFront,
.flashcardBack {
  position: absolute;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  backface-visibility: hidden; 
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  padding: 20px;
  border-radius: 10px;
  background: var(--light-bg-color); 
  color: var(--text-primary);
  text-align: justify; 

}

/* Specific styles for the back of the card */
.flashcardBack {
  transform: rotateY(180deg);
  background: var(--secondary-bg-color);
  width: 100%;
  height: 100%;
  display: flex; /* Flex to center the content */
  justify-content: center;
  align-items: center;
}

.flashcardTitle::before,
.flashcardTitle::after,
.flashcardQuestion::before,
.flashcardQuestion::after {
  content: none;
}

.flashcardHeader {
  display: flex;
  flex-direction: column;
  align-items: center;
  text-align: center;
  margin-bottom: 1rem;
}

.flashcardTitle {
  font-size: 1.8rem; /* Larger font size for the title */
  font-weight: 700; /* Bold font weight */
  color: var(--accent-color); /* Use the accent color or any color you prefer */
  font-weight: 700;
  margin-bottom: 0.5rem;
}

.flashcardQuestion {
  font-size: 1.5rem;
  font-weight: 600; 
  color: var(--text-primary); 
  text-align: center; 
  padding: 0 2rem; 
  line-height: 1.5; 
}


/* Styles for questions and answers */
.flashcardQuestion,
.flashcardAnswer {
  font-size: 1.2rem; 
  font-weight: 600;
  text-align: center;
  margin: 20px 0; 
}

/* Dark mode specific styles */
.container.dark .flashcardFront,
.container.dark .flashcardBack,
.container.dark .flashcardQuestion {
  color: var(--dark-text-color);
}

/* Styles for code blocks */
.codeBlock {
  display: flex;
  flex-direction: column;
  justify-content: center;
  align-items: center;
  overflow: auto; 
  font-family: 'Fira Code', monospace;
  font-size: 1em; /* Adjusted font size for readability */
  color: var(--text-primary);
  text-align: center;
  margin: 20px 0;
  font-weight: normal;
  line-height: 1.5;
  background-color: #f0f0f0; 

  width: 100%; 
  max-height: 45vh; 
  overflow: hidden;
  padding: 15px; 
  border-radius: 5px;
  z-index: 10;

}

.container.dark .codeBlock {
  background-color: #272822; 
}


/* Ensure <pre> inside codeBlock is well aligned */
.codeBlock pre {
  text-align: left;
  margin: 0;
  width: 100%;
}



/* Responsive Design */
@media (max-width: 768px) {
  .container {
    min-height: 80vh;
    width: 100%;
    
  }

  .flipContainer {
    width: 100%; 
    height: 100%;
    
  }

  .flashcardContent {
    height: 65vh;
    min-height: 300px;
    padding: 10px;
    max-width: 95vw;
    box-shadow: 0 5px 10px rgba(0, 0, 0, 0.15);
  }


  .flashcardQuestion,
  .flashcardAnswer {
    text-align: center;
    margin-left: auto;
    margin-right: auto;
    padding-left: 15px;
    padding-right: 15px;
    font-size: 4vw;
  }

  
  .flashcardFront, .flashcardBack {
    padding: 10px; 
    font-size: 4vw; 
  }


  .navButton {
    padding: 15px 25px;
    font-size: 4vw;
    margin: 10px 5px;
  }



  .exitBtn {
    width: 50px;
    height: 50px;
  }

 

  .codeBlock {
    overflow: auto;
    margin-left: 15px;
    font-size: 3.5vw;
    padding: 10px; 
    max-height: 40vh; 
    max-width: 70vw; 
  }

  
}
